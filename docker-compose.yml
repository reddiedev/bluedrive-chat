services:
  ollama:
    image: bd_ollama:latest
    container_name: bd_ollama
    build:
      context: ./ollama        
      dockerfile: Dockerfile
    ports:
      - "11435:11434"
    volumes:
      - bd_ollama_data:/root/.ollama
    environment:
      - OLLAMA_KEEP_ALIVE=24h 
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    networks:
      bd_network:
        ipv4_address: ${OLLAMA_IP_ADDRESS:-172.28.0.10}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test:  [ "CMD-SHELL", "bash", "-c", "{ printf >&3 'GET / HTTP/1.0\\r\\n\\r\\n'; cat <&3; } 3<>/dev/tcp/localhost/11434 | grep 'Ollama is' || exit 1"  ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s 
  db:
    image: postgres:16
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      bd_network:
        ipv4_address: ${DB_IP:-172.28.0.30}
    volumes:
      - bd_pgdata:/var/lib/postgresql/data
 
  backend:
    image: bd_backend:latest
    container_name: bd_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - OLLAMA_MODEL=${OLLAMA_MODEL:-qwen2.5-coder:1.5b}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://ollama:11434}
    networks:
      bd_network:
        ipv4_address: ${BACKEND_IP:-172.28.0.20}
    depends_on:
      - db

volumes:
  bd_ollama_data:
  bd_pgdata:

networks:
  bd_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
